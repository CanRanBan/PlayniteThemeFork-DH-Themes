<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource HoverBrush}"/>
        <Setter Property="Background" Value="{DynamicResource UserEditableBoxBrush}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource GlyphBrush}">
                        <Border.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border
                                                    Width="{Binding ActualWidth, ElementName=PART_Track, FallbackValue={StaticResource Zero}}"
                                                    Height="{Binding ActualHeight, ElementName=PART_Track, FallbackValue={StaticResource Zero}}"
                                                    Background="Black" CornerRadius="{DynamicResource ControlCornerRadius}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.OpacityMask>
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border 
                                    Background="{TemplateBinding Background}" />
                            <Border Name="PART_Track" Margin="0" 
                                    />
                            <Border Background="{TemplateBinding Foreground}" CornerRadius="{DynamicResource ControlCornerRadius}"
                                    Tag="{DynamicResource EnableSmoothProgressBar}"
                                    Width="{Binding ActualWidth, ElementName=PART_Indicator}" HorizontalAlignment="Left"
                                    x:Name="GlyphIndicator"/>
                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid x:Name="IndicatorGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="8*" x:Name="PreGrid"/>
                                        <ColumnDefinition Width="1*" x:Name="PostGrid"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" x:Name="WidthProxy"/>
                                    <Grid x:Name="Animation" Visibility="Collapsed" Grid.ColumnSpan="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Fill="Transparent" Width="{Binding ActualWidth, ElementName=WidthProxy}" Grid.Column="0">
                                            <Rectangle.LayoutTransform>
                                                <ScaleTransform x:Name="HiderPreTransform" ScaleX="0"/>
                                            </Rectangle.LayoutTransform>
                                        </Rectangle>
                                        <Border Grid.Column="1" Background="{TemplateBinding Foreground}" CornerRadius="{DynamicResource ControlCornerRadius}"/>
                                        <Rectangle Fill="Transparent" RenderTransformOrigin="1, 0" Width="{Binding ActualWidth, ElementName=WidthProxy}" Grid.Column="2">
                                            <Rectangle.LayoutTransform>
                                                <ScaleTransform x:Name="HiderPostTransform" ScaleX="1" />
                                            </Rectangle.LayoutTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </Decorator>
                            
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Will cause binding exceptions when switching the option using ThemeModifier :( -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}" Value="{StaticResource True}"/>
                                <Condition Binding="{Binding Tag, ElementName=GlyphIndicator}" Value="{StaticResource True}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="GlyphIndicator" Property="DataContext" Value="{Binding ElementName=PART_Indicator, Converter={PluginConverter Plugin=ThemeExtras, Converter=DoubleToSmoothedValueConverter}, ConverterParameter='ActualWidth, 0.125, true'}"/>
                            <Setter TargetName="GlyphIndicator" Property="Width" Value="{Binding CurrentValue}"/>
                        </MultiDataTrigger>

                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                            <Setter TargetName="GlyphIndicator" Property="Visibility" Value="Hidden" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                        <DoubleAnimation Storyboard.TargetName="HiderPreTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0:00:2" BeginTime="0:0:0.5"/>
                                        <DoubleAnimation Storyboard.TargetName="HiderPostTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                         To="0" Duration="0:00:2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>