<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                        <ScrollViewer Focusable="False" Padding="4"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Padding" Value="0,2,4,2" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="SelectionBorder" Background="Transparent"
                                Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                            <DockPanel>
                                <ToggleButton x:Name="Expander" ClickMode="Press" DockPanel.Dock="Left" Margin="0,0,2,0"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseStyle}">
                                            <Setter Property="Focusable" Value="False" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Viewbox x:Name="IsExpandedPath" Visibility="Visible" RenderTransformOrigin="0.5,0.5">
                                                            <Viewbox.RenderTransform>
                                                                <RotateTransform x:Name="Rotation"/>
                                                            </Viewbox.RenderTransform>
                                                            <TextBlock Text="&#xEAA0;" FontFamily="{DynamicResource FontIcoFont}" Foreground="{DynamicResource TextBrush}"
                                                                        HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Viewbox>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle"
                                                                                             To="90" Duration="0:0:0.1"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle"
                                                                                             To="0" Duration="0:0:0.1"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" Height="Auto"
                                                  DockPanel.Dock="Left"/>
                            </DockPanel>
                        </Border>
                        <Border ClipToBounds="True" x:Name="ItemsBorder" RenderTransformOrigin="0.5,0" Opacity="0" Visibility="Collapsed">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleY="0" x:Name="ItemsBorderScale"/>
                            </Border.LayoutTransform>
                            <ItemsPresenter x:Name="ItemsHost" Margin="20,0,0,0" RenderTransformOrigin="0.5,0">
                                <ItemsPresenter.RenderTransform>
                                    <ScaleTransform ScaleY="{Binding ScaleY, ElementName=ItemsBorderScale, Converter={PluginConverter Plugin=ThemeExtras, Converter=MultiplicativeInverseConverter}, ConverterParameter=0}"/>
                                </ItemsPresenter.RenderTransform>
                            </ItemsPresenter>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}" Value="False">
                            <Setter TargetName="ItemsHost" Property="RenderTransform" Value="{x:Null}"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                         Duration="0:0:0.15" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.15" To="1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.15"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                         Duration="0:0:0.15" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ItemsBorder" Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.15" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="SelectionBorder">
                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>